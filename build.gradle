import java.text.SimpleDateFormat

plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version "${shadowVersion}"
    id 'net.kyori.blossom' version "${blossomVersion}"
}

compileJava {
    version = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    sourceCompatibility = JavaVersion.VERSION_21
}

mainClassName = 'dev.mzcy.DatabaseEngine'

group = 'dev.mzcy'
version = '1.0 '

repositories {
    mavenCentral()
    maven {
        // Minestom
        url 'https://jitpack.io'
    }
    maven {
        // Dependencies
        url 'https://repo.spongepowered.org/maven'
    }
}

dependencies {
    // Annotations
    implementation "org.jetbrains:annotations:${annotationsVersion}"
    annotationProcessor "org.jetbrains:annotations:${annotationsVersion}"

    implementation "org.projectlombok:lombok:1.18.34"
    annotationProcessor "org.projectlombok:lombok:1.18.34"

    // Database
    implementation "eu.koboo:en2do:${en2doVersion}"
    implementation 'com.mysql:mysql-connector-j:9.0.0'
    implementation 'org.xerial:sqlite-jdbc:3.46.1.0'
    implementation 'com.google.code.gson:gson:2.11.0'

}

tasks.register('cleanProject', Delete) {
    delete file('logs/')
    delete file('extensions/')
    delete file('configs/')
    delete rootProject.buildDir
}

java {
    withSourcesJar()
    withJavadocJar()
}

shadowJar {
    manifest {
        attributes(
                'Main-Class': mainClassName,
                'Implementation-Title': rootProject.name,
                'Implementation-Version': rootProject.version,
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
}

blossom {
    replaceToken 'PROJECT_NAME', rootProject.name
    replaceToken 'PROJECT_VERSION', rootProject.version
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}